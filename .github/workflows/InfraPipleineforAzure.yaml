name: azureinfraBygithubaction

on:
  workflow_dispatch:  # Trigger manually from the GitHub UI

jobs:
  terraform:
    runs-on: self-hosted  # Running on a self-hosted Windows runner
    steps:
      # Step 1: Checkout repository code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Azure login using Service Principal
      - name: Azure Login action
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 3: Terraform init with Azurerm backend configuration
      - name: Terraform init azurerm backend
        uses: ahmedig/terraform-azurerm-backend@v4
        with:
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}  # Use the same secret as Azure Login step
          resource_group_name: testrg
          storage_account_name: mystorageaccount
          container_name: tfstate
          key: terraform.tfstate

      # Step 4: Terraform Plan
      - name: Terraform Plan
        shell: powershell
        run: |
          terraform init
          terraform plan -out=tfplan
        working-directory: ./Environment/QA

      # Step 5: Terraform Apply (manual approval before apply)
      - name: Terraform Apply
        shell: powershell
        run: |
          terraform apply -auto-approve tfplan
        working-directory: ./Environment/QA
                 
# # Step 2: Azure Service Principal authentication
#       - name: Azure Service Principal authentication
#         shell: powershell
#         run: |
#           $env:ARM_CLIENT_ID = "${{ secrets.ARM_CLIENT_ID }}"
#           $env:ARM_CLIENT_SECRET = "${{ secrets.ARM_CLIENT_SECRET }}"
#           $env:ARM_TENANT_ID = "${{ secrets.ARM_TENANT_ID }}"
#           $env:ARM_SUBSCRIPTION_ID = "${{ secrets.ARM_SUBSCRIPTION_ID }}"
          
#       # - name: Azure Service Principal authentication
#       #   shell: powershell
#       #   run: |
#       #     $env:ARM_CLIENT_ID = ${{ secrets.ARM_CLIENT_ID }}
#       #     $env:ARM_CLIENT_SECRET = ${{ secrets.ARM_CLIENT_SECRET }}
#       #     $env:ARM_TENANT_ID = ${{ secrets.ARM_TENANT_ID }}
#       #     $env:ARM_SUBSCRIPTION_ID = ${{ secrets.ARM_SUBSCRIPTION_ID }}   
  
    # terraform backend configuration
    
      - name: Terraform Init with backend config
        shell: powershell
        run: |
          terraform init `
            -backend-config="resource_group_name=testrg" `
            -backend-config="storage_account_name=tfstatestorageacc24" `
            -backend-config="container_name=tfstatecontainer" `
            -backend-config="key=terraform1.tfstate"
        working-directory: ./Environment/QA
# jobs:
#   infraprovision:
#     runs-on: self-hosted

#     steps:
#       - name: Checkout repo
#         uses: actions/checkout@v4

#       - name: Set up Terraform
#         uses: hashicorp/setup-terraform@v3
#         with:
#           terraform_version: 1.5.7  # Or whatever version you need
          
#       - name: Azure Login action
#         uses: azure/login@v2
#         with:
#           creds: ${{ secrets.AZURE_CREDENTIALS }}
          
#       - name: Terraform init azurerm backend
        
#         uses: ahmedig/terraform-azurerm-backend@v4
#         with:   
#            azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}    
#            resource_group_name: testrg   
#            container_name: tfstatecontainer
#            storage_account_name: tfstatestorageacc24      
#            subscription_id: dcb52f24-3382-4902-9301-084ebd8ec819
                
#            tf_working_directory: ./Environment/QA
                      
                      
      
            
